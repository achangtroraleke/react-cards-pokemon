{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { v1 as uuid } from \"uuid\";\nconst useAxios = url => {\n  _s();\n  const [resultsArr, setResultsArr] = useState([]);\n  const makeRequest = async () => {\n    const response = await axios.get(url);\n    setResultsArr(cards => [...cards, {\n      ...response.data,\n      id: uuid()\n    }]);\n  };\n  const testFunc = () => {\n    console.log(\"TEST\");\n  };\n  return [resultsArr, makeRequest];\n};\n_s(useAxios, \"YB/zr2K9bBo84rRuQ1yZD2I1OZE=\");\nexport default useAxios;","map":{"version":3,"names":["axios","React","useEffect","useState","v1","uuid","useAxios","url","_s","resultsArr","setResultsArr","makeRequest","response","get","cards","data","id","testFunc","console","log"],"sources":["/home/james/react/exercises/react-cards-pokemon/src/hooks/useAxios.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport {v1 as uuid} from \"uuid\";\n\nconst useAxios = (url) => {\n    const [resultsArr, setResultsArr] = useState([]);\n    const makeRequest = async () => {\n        const response = await axios.get(url);\n        setResultsArr(cards => [...cards, {...response.data, id: uuid()}]);\n    }\n    const testFunc = () =>{\n        console.log(\"TEST\")\n    }\n\n    return [resultsArr, makeRequest];\n}\n\nexport default useAxios;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAAQC,EAAE,IAAIC,IAAI,QAAO,MAAM;AAE/B,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAAC,EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAACN,GAAG,CAAC;IACrCG,aAAa,CAACI,KAAK,IAAI,CAAC,GAAGA,KAAK,EAAE;MAAC,GAAGF,QAAQ,CAACG,IAAI;MAAEC,EAAE,EAAEX,IAAI,CAAC;IAAC,CAAC,CAAC,CAAC;EACtE,CAAC;EACD,MAAMY,QAAQ,GAAGA,CAAA,KAAK;IAClBC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;EACvB,CAAC;EAED,OAAO,CAACV,UAAU,EAAEE,WAAW,CAAC;AACpC,CAAC;AAAAH,EAAA,CAXKF,QAAQ;AAad,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}